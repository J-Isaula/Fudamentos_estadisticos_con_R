squared_dists <- (dists)^2
squared_dists
sum_sq_dists <- sum(squared_dists)
sum_sq_dists
sum_sq_dists/82
var(msleep$sleep_total)
std(msleep$sleep_total)
std(msleep$sleep_total)
sd(msleep$sleep_total)
mean(abs(dists))
mad(msleep$sleep_total)
quantile(msleep$sleep_total)
ggplot(msleep, aes(y = sleep_total)) +
geom_boxplot()
quantile(msleep$sleep_total, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1))
quantile(msleep$sleep_total, probs = seq(0, 1, by = 0.2))
quantile(msleep$sleep_total, 0.75) - quantile(msleep$sleep_total, 0.25)
iqr <- quantile(msleep$sleep_total,0.75) - quantile(msleep$sleep_total, 0.25)
upper_threshold <- quantile(msleep$sleep_total, 0.75) + 1.5*iqr
msleep %>% filter(bodywt < lower_threshold | bodywt > upper_threshold) %>%
select(name, vore, sleep_total, bodywt)
lower_threshold <- quantile(msleep$sleep_total, 0.25) - 1.5*iqr
msleep %>% filter(bodywt < lower_threshold | bodywt > upper_threshold) %>%
select(name, vore, sleep_total, bodywt)
quantile(food_consumption$co2_emission)
quantile(food_consumption$co2_emission, probs = seq(0,1,0.2))
quantile(food_consumption$co2_emission, probs = seq(0,1,0.1))
food_consumption %>%
group_by(food_category) %>%
summarize(var_co2 = var(co2_emission),
sd_co2 = sd(co2_emission))
ggplot(food_consumption, aes(co2_emission)) +
# Creación del  histograma
geom_histogram() +
# Creamos subgráficos separados para cada categoría de food_category
facet_wrap(~ food_category)
library(ggplot2)
library(ggplot2)
ggplot(food_consumption, aes(co2_emission)) +
# Creación del  histograma
geom_histogram() +
# Creamos subgráficos separados para cada categoría de food_category
facet_wrap(~ food_category)
emissions_by_country %>%
head()
library(tidyverse)
emissions_by_country %>%
head()
emissions_by_country <- food_consumption %>%
group_by(country) %>%
summarize(total_emission = sum(co2_emission))
emissions_by_country %>%
head()
lower <- q1-1.5*iqr
q1 <- quantile(emissions_by_country$total_emission, 0.25)
q3 <- quantile(emissions_by_country$total_emission, 0.75)
iqr <- q3-q1
upper <- q3+1.5*iqr
lower <- q1-1.5*iqr
upper <- q3+1.5*iqr
emissions_by_country %>%
filter(total_emission < lower | total_emission > upper)
emissions_by_country %>%
filter(total_emission < lower | total_emission > upper)
sales_count
sales_counts <- data.frame(name = c("Amir", "Brian", "claire", "Damian"), n_sales = c(178, 126, 75, 69))
sales_count %>%
sample_n(1)
sales_counts %>%
sample_n(1)
sales_counts %>%
sample_n(1)
sales_counts %>%
sample_n(1)
sales_counts %>%
sample_n(1)
sales_counts %>%
sample_n(1)
sales_counts %>%
sample_n(1)
sales_counts %>%
sample_n(1)
sales_counts %>%
sample_n(1)
set.seed(5)
sales_counts %>%
sample_n(1)
set.seed(5)
sales_counts %>%
sample_n(1)
set.seed(5)
sales_counts %>%
sample_n(1)
library(tidyverse)
set.seed(5)
sales_counts %>%
sample_n(1)
library(dplyr)
set.seed(5)
sales_counts %>%
sample_n(1)
library(dplyr)
sales_counts <- data.frame(name = c("Amir", "Brian", "claire", "Damian"), n_sales = c(178, 126, 75, 69))
sales_counts %>%
sample_n(1)
sales_counts %>%
sample_n(2)
sales_counts %>%
sample_n(2)
sales_counts %>%
sample_n(2)
sales_counts %>%
sample_n(2)
set.seed(5)
sales_counts %>%
sample_n(2)
sales_counts %>%
sample_n(2, replace = TRUE)
set.seed(5)
sales_counts %>%
sample_n(2, replace = TRUE)
sample(sales_team, 5, replace = TRUE)
sample(sales_counts, 5, replace = TRUE)
amir_deals <- data.frame(product = c("Product A", "Product B", "Product C", "Product D", "Product E", "Product F", "Product G", "Product H", "Product I", "Product J", "Product N"), n = c(23, 62, 15, 40, 5, 11, 2, 8, 7, 2, 3))
amir_deals %>%
count(product)
amir_deals %>%
count(product) %>%
mutate(prob = n/sum(n))
amir_deals %>%
mutate(prob = n/sum(n))
dado <- data.frame(n = (1,2,3,4,5,6))
dado <- data.frame(n = (1,2,3,4,5,6))
dado <- data.frame(n = c(1, 2, 3, 4, 5, 6))
mean(dado$n)
rolls_10
rolls_10 <- dado %>%
sample_n(10, replace = TRUE)
rolls_10
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
set.seed(5)
rolls_10 <- dado %>%
sample_n(10, replace = TRUE)
rolls_10
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
set.seed(1)
rolls_10 <- dado %>%
sample_n(10, replace = TRUE)
rolls_10
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
```{r}
rolls_10 <- dado %>%
sample_n(10, replace = TRUE)
rolls_10
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
mean(rolls_10$n)
mean(dado$n)
mean(rolls_10$n)
mean(rolls_10$n)
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
mean(rolls_10$n)
rolls_10 <- dado %>%
sample_n(10, replace = TRUE)
rolls_10
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
mean(rolls_10$n)
set.seed(3)
rolls_10 <- dado %>%
sample_n(10, replace = TRUE)
rolls_10
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
mean(rolls_10$n)
set.seed(2)
rolls_10 <- dado %>%
sample_n(10, replace = TRUE)
rolls_10
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
mean(rolls_10$n)
set.seed(4)
rolls_10 <- dado %>%
sample_n(10, replace = TRUE)
rolls_10
ggplot(rolls_10, aes(n)) +
geom_histogram(bins = 6)
mean(rolls_10$n)
mean(dado$n)
set.seed(4)
rolls_10 <- dado %>%
sample_n(100, replace = TRUE)
rolls_10
set.seed(4)
rolls_100 <- dado %>%
sample_n(100, replace = TRUE)
mean(rolls_100$n)
set.seed(1)
rolls_100 <- dado %>%
sample_n(100, replace = TRUE)
mean(rolls_100$n)
ggplot(rolls_100, aes(n)) +
geom_histogram(bins = 6)
restaurant_groups <- data.frame(group_id = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J"), group_size = c(2, 4, 6, 2, 2, 2, 3, 2, 4, 2))
ggplot(restaurant_groups, aes(group_size)) +
geom_histogram(bins = 5)
size_distribution <-restaurant_groups %>%
# contamos el número de cada tamaño de grupo
count(group_size) %>%
# Calculamos las probabilidades
mutate(probability = n / sum(n))
size_distribution
expected_val <- sum(size_distribution$group_size * size_distribution$probability)
expected_val
size_distribution %>%
# Filter for groups of 4 or larger
filter(group_size >= 4) %>%
# Calculate prob_4_or_more by taking sum of probabilities
summarize(prob_4_or_more = sum(probability))
library(ggplot2)
punif(7, min = 0, max = 12)
punif(7, min = 0, max = 12, lower.tail = FALSE)
punif(7, min = 0, max = 12) - punif(5, min = 0, max = 12)
punif(7, min = 0, max = 12) - punif(4, min = 0, max = 12)
# Tiempos de espera mínimos y máximos para la copia de seguridad que se realiza cada 30 minutos
min <- 0
max <- 30
prob_less_than_5 <- punif(5, min = min, max = max)
prob_less_than_5
prob_greater_than_5 <- punif(30, min = min, max= max)- punif(5, min = min, max = max)
prob_greater_than_5
prob_between_10_and_20 <- punif(20, min = min, max = max) - punif(10, min = min, max = max)
prob_between_10_and_20
seq(1:1000)
set.seed(334)
seq(1:1000)
set.seed(334)
wait_times <- data.frame(simulation_nb = c(seq(1:1000)))
wait_times
wait_times %>%
mutate(time = runif(1000, min = 0, max = 30))
wait_times %>%
mutate(time = runif(1000, min = 0, max = 30)) %>%
ggplot(aes(time)) +
geom_histogram(bins = 30)
wait_times_1000 <- wait_times %>%
mutate(time = runif(1000, min = 0, max = 30))
wait_times_1000 %>%
mutate(time = runif(1000, min = 0, max = 30)) %>%
ggplot(aes(time)) +
geom_histogram(bins = 30)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(8, 1, 0.5)
rbind(1, 8, 0.5)
rbind(1, 8, 0.5)
rbind(1, 8, 0.5)
rbinom(1, 8, 0.5)
rbinom(1, 8, 0.5)
rbinom(10, 3, 0.5)
rbinom(10, 3, 0.5)
rbinom(10, 3, 0.25)
dbinom(7, 10, 0.5)
pbinom(7, 10, 0.5, lower.tail = FALSe)
pbinom(7, 10, 0.5, lower.tail = FALSE)
set.seed(10)
rbinom(1, 1, 0.3)
rbinom(1, 3, 0.3)
rbinom(1, 3, 0.3)
deals <- rbinom(52, 3, 0.3)
mean(deals)
mean(deals)
deals <- rbinom(52, 3, 0.3)
mean(deals)
deals
mean(deals)
dbinom(3, 3, 0.3)
pbinom(1, 3, 0.3)
pbinom(1, 3, 0.3, lower.tail = FALSE)
won_30pct <- 3 * 0.3
won_30pct <- 3 * 0.3
won_30pct
won_25pct <- 3 *0.25
won_25pct
won_35pct <- 3 * 0.35
won_35pct
pnorm(154, mean = 161, sd = 7)
pnorm(154, mean = 161, sd = 7, lower.tail = FALSE)
pnorm(157, mean = 161, sd = 7) - pnorm(154, mean = 161, sd = 7)
qnorm(0.9, mean = 161, sd = 7)
qnorm(0.9, mean = 161, sd = 7, lower.tail = FALSE)
rnorm(10, mean = 161, sd = 7)
pnorm(7500, mean = 5000, sd = 2000)
1 - pnor(1000, mean = 5000, sd = 2000)
1 - pnorm(1000, mean = 5000, sd = 2000)
pnorm(1000, mean = 5000, sd = 2000)
pnorm(7000, mean = 5000, sd = 2000) - pnorm(3000, mean = 5000, sd = 2000)
qnorm(0.75, mean  =5000, sd = 2000, lower.tail = FALSE)
qnorm(0.75, mean = 5000, sd = 2000)
new_sales <- data.frame(sale_num = c(seq(1:30)))
new_sales <- seq(1, 36, 1) %>%
as.data.frame() %>%
set_names("sale_num")
library(tidyverse)
new_sales <- seq(1, 36, 1) %>%
as.data.frame() %>%
set_names("sale_num")
new_mean <- 5000*1.2
new_mean
new_sd <- 2000 * 1.3
new_sd
new_sales %>%
mutate(amount = rnorm(36, mean = new_mean, sd = new_sd))
new_sales <- new_sales %>%
mutate(amount = rnorm(36, mean = new_mean, sd = new_sd))
ggplot(new_sales, aes(amount)) +
geom_histogram(bins = 10)
die <- c(1,2,3,4,5,6)
sample_of_5 <- sample(die, 5, replace = TRUE)
sample_of_5
mean(sample_of_5)
mean(sample_of_5)
sample(die, 5, replace = TRUE) %>% mean()
sample(die, 5, replace = TRUE) %>% mean()
sample_mean <- replicate(10, sample(die, 5, replace = TRUE)) %>% mean()
sample_mean
sample_mean <- replicate(10, sample(die, 5, replace = TRUE) %>% mean())
sample_mean
sample_mean %>% hist()
replicate(100, sample(die, 5, replace = TRUE) %>% mean())
sample_means <- replicate(1000, sample(die, 5, replace = TRUE) %>% mean())
replicate(1000, sample(die, 5, replace = TRUE) %>% sd())
sample_sd <- replicate(1000, sample(die, 5, replace = TRUE) %>% sd())
sales_team <- c("Amir", "Brian", "Claire", "Damian")
sample(sales_team, 10, replace = TRUE)
sample(sales_team, 10, replace = TRUE)
sample(sales_team, 10, replace = TRUE)
reticulate::repl_python()
sample(sales_team, 10, replace = TRUE)
mean(sample_means)
dpois(5, lambda = 8)
ppois(5, lambda = 8)
ppois(5, lambda = 8, lower.tail = FALSE)
ppois(5, lambda = 10, lower.tail = FALSE)
rpois(10, lambda = 8)
dpois(5, lambda = 4)
dpois(5, 5.5)
ppois(2, lambda = 4)
ppois(10, lambda = 4, lower.tail = FALSE)
pexp(1, rate = 0.5)
pexp(4, rate = 0.5, lower.tail = FALSE)
pexp(4, rate = 0.5) - pexp(1, rate = 0.5)
pexp(1, rate = 1/2.5)
pexp(4, rate = 1/2.5, lower.tail = FALSE)
pexp(4, rate = 1/2.5) - pexp(3, rate = 1/2.5)
df <- data.frame(x = c(sample(1:50,25, replace = F)), y = c(sample(1:30, 25, replace = F)))
df
ggplot(df, aes(x, y)) +
geom_point()
df <- data.frame(x = c(sample(1:50,25, replace = T)), y = c(sample(1:30, 25, replace = T)))
ggplot(df, aes(x, y)) +
geom_point()
df <- data.frame(x = c(runif(25, min = 1, max = 30)), y = c(runif(25, min = 1, max = 30)))
ggplot(df, aes(x, y)) +
geom_point()
df <- data.frame(x = c(runif(25, min = 1, max = 30)), y = c(runif(25, min = 1, max = 30)))
ggplot(df, aes(x, y)) +
geom_point()
df <- data.frame(x = c(runif(20, min = 1, max = 15)), y = c(runif(20, min = 1, max = 15)))
ggplot(df, aes(x, y)) +
geom_point()
ggplot(df, aes(x,y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
cor(df$x, df$y)
cor(df$y, df$x)
library(ggplot2)
library(tidyverse)
world_happiness <- readRDS("world_happiness_sugar.rds")
head(world_happiness)
ggplot(world_happiness, aes(life_exp, happiness_score))+
geom_point()
ggplot(world_happiness, aes(life_exp, happiness_score)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
cor(world_happiness$life_exp, world_happiness$happiness_score)
library(ggplot2)
data("msleep")
head(msleep)
ggplot(msleep, aes(bodywt, awake)) +
geom_point()
cor(msleep$bodywt, msleep$awake)
ggplot(msleep, aes(bodyhwt)) +
geom_histogram()
ggplot(msleep, aes(bodyhwt)) +
geom_histogram()
msleep %>%  ggplot(., aes(bodyhwt)) +
geom_histogram()
library(tidyverse)
msleep %>%  ggplot(., aes(bodyhwt)) +
geom_histogram()
msleep %>%  ggplot(., aes(bodywt)) +
geom_histogram()
ggplot(msleep, aes(bodywt)) +
geom_histogram()
msleep %>%
mutate(log_bodywt = log(bodywt))
msleep %>%
mutate(log_bodywt = log(bodywt)) %>%
ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", se = "FALSE")
msleep %>%
mutate(log_bodywt = log(bodywt)) %>%
ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", se = "FALSE")
msleep %>%
mutate(log_bodywt = log(bodywt)) %>%
ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
msleep <- msleep %>%
mutate(log_bodywt = log(bodywt)) %>%
ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
msleep %>%  ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
msleep %>%
ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
msleep %>%
ggplot(., aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
msleep <- msleep %>%
mutate(log_bodywt = log(bodywt))
library(ggplot2)
msleep <- msleep %>%
mutate(log_bodywt = log(bodywt))
msleep %>%
ggplot(., aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
ggplot(mslepp, aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
ggplot(msleep, aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
ggplot(msleep, aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
msleep %>%
mutate(log_bodywt = log(bodywt)) %>%
ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", use = "FALSE")
msleep %>%
mutate(log_bodywt = log(bodywt)) %>%
ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", se = "FALSE")
library(tidyverse)
msleep %>%
mutate(log_bodywt = log(bodywt)) %>%
ggplot(aes(log_bodywt, awake)) +
geom_point() +
geom_smooth(method = "lm", se = "FALSE")
msleep %>%
mutate(log_bodywt = log(bodywt))
msleep
msleep <- as.data.frame(msleep)
msleep
msleep <- as.data.frame(msleep)
library(ggplot2)
data("msleep")
head(msleep)
msleep <- msleep %>%
mutate(log_bodywt = log(bodywt))
msleep %>%
mutate(log_bodywt = log(bodywt))
msleep <- msleep %>%
mutate(log_bodywt = log(bodywt))
msleep <- as.data.frame(msleep) %>%
mutate(log_bodywt = log(bodywt))
as.data.frame(msleep)
class(as.data.frame(msleep))
msleep <- as.data.frame(msleep) %>%
mutate(log_bodywt = log(bodywt))
class(msleep)
library(ggplot2)
data("msleep")
head(msleep)
head(msleep)
ggplot(msleep, aes(bodywt, awake)) +
geom_point()
